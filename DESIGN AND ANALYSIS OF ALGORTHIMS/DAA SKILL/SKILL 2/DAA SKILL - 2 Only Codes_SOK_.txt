
                                                                                       DAA SKILL - 2

1) A Very Big Sum

#include <stdio.h>

int main() {
    int n;
    long long sum = 0, num;
    scanf("%d", &n);
    while (n--) {
        scanf("%lld", &num);
        sum += num;
    }
    printf("%lld\n", sum);
    return 0;
}



2) Diagonal Difference

#include <stdio.h>
#include <stdlib.h>

int main() {
    int size, diag1 = 0, diag2 = 0;
    scanf("%d", &size);

    int arr[size][size];
    for (int i = 0; i < size; i++) {
        for (int j = 0; j < size; j++) {
            scanf("%d", &arr[i][j]);
            if (i == j) diag1 += arr[i][j];
            if (i + j == size - 1) diag2 += arr[i][j];
        }
    }

    printf("%d\n", abs(diag1 - diag2));
    return 0;
}



3) Number Line Jumps

#include <stdio.h>

int main() {
    int x1, v1, x2, v2;
    scanf("%d %d %d %d", &x1, &v1, &x2, &v2);

    for (int i = 0; i < 10000; i++) {
        if (x1 == x2) {
            printf("YES\n");
            return 0;
        }
        x1 += v1;
        x2 += v2;
    }

    printf("NO\n");
    return 0;
}



4) Apple and Orange

#include <stdio.h>

int main() {
    int s, t, a, b, m, n, apple_count = 0, orange_count = 0;
    scanf("%d %d %d %d %d %d", &s, &t, &a, &b, &m, &n);
    
    int x;
    for (int i = 0; i < m; i++) {
        scanf("%d", &x);
        if (a + x >= s && a + x <= t) apple_count++;
    }
    
    for (int i = 0; i < n; i++) {
        scanf("%d", &x);
        if (b + x >= s && b + x <= t) orange_count++;
    }

    printf("%d\n%d\n", apple_count, orange_count);
    return 0;
}



5) Between Two Sets

#include <stdio.h>

int getTotalX(int a[], int b[], int n, int m) {
    int res = 0;
    int i, j;
    

    int max_a = a[0], min_b = b[0];
    for (i = 1; i < n; i++) {
        if (a[i] > max_a) max_a = a[i];
    }
    for (i = 1; i < m; i++) {
        if (b[i] < min_b) min_b = b[i];
    }

    for (i = max_a; i <= min_b; i++) {
        int valid = 1;

       
        for (j = 0; j < n; j++) {
            if (i % a[j] != 0) {
                valid = 0;
                break;
            }
        }

       
        for (j = 0; j < m; j++) {
            if (b[j] % i != 0) {
                valid = 0;
                break;
            }
        }

        if (valid) res++;
    }

    return res;
}

int main() {
    int n, m;

    scanf("%d %d", &n, &m);

    int a[n], b[m];

    for (int i = 0; i < n; i++) {
        scanf("%d", &a[i]);
    }

    for (int i = 0; i < m; i++) {
        scanf("%d", &b[i]);
    }

    int total = getTotalX(a, b, n, m);

    printf("%d\n", total);

    return 0;
}


