
                                                                                       DAA SKILL - 7

1) Breaking the Records

#include <stdio.h>

void f(int a[], int b, int *c, int *d) {
    int e = a[0], f = a[0];
    *c = 0;
    *d = 0;
    
    for (int g = 1; g < b; g++) {
        if (a[g] > e) {
            e = a[g];
            (*c)++;
        }
        if (a[g] < f) {
            f = a[g];
            (*d)++;
        }
    }
}

int main() {
    int h;
    scanf("%d", &h);
    int i[h];
    
    for (int j = 0; j < h; j++) {
        scanf("%d", &i[j]);
    }
    
    int c, d;
    f(i, h, &c, &d);
    
    printf("%d %d\n", c, d);
    return 0;
} 




2) Subarray Division

#include <stdio.h>

int birthday(int a[], int b, int c, int d) {
    int e = 0;
    if (b == 1) return 1;
    
    for (int f = 0; f < b; f++) {
        int g = 0;
        for (int h = f; h < f + d; h++) {
            if (h < b) g += a[h];
        }
        if (g == c) e++;
    }
    return e;
}

int main() {
    int i;
    scanf("%d", &i);
    
    int j[i];
    for (int k = 0; k < i; k++) scanf("%d", &j[k]);
    
    int l, m;
    scanf("%d %d", &l, &m);
    
    printf("%d\n", birthday(j, i, l, m));
    return 0;
}




3) Divisible Sum Pairs

#include <stdio.h>

int divisibleSumPairs(int n, int k, int ar[]) {
    int count = 0;
    for (int i = 0; i < n; i++) {
        for (int j = i + 1; j < n; j++) {
            if ((ar[i] + ar[j]) % k == 0) {
                count++;
            }
        }
    }
    return count;
}

int main() {
    int n, k;
    scanf("%d %d", &n, &k);
    
    int ar[n];
    for (int i = 0; i < n; i++) {
        scanf("%d", &ar[i]);
    }
    
    printf("%d\n", divisibleSumPairs(n, k, ar));
    
    return 0;
}




4) Migratory Birds

#include <stdio.h>

int migratoryBirds(int arr[], int n) {
    int buckets[6] = {0}, i, max_count = 0, result = 1;

    for (i = 0; i < n; i++)
        buckets[arr[i]]++;

    for (i = 1; i < 6; i++) {
        if (buckets[i] > max_count) {
            max_count = buckets[i];
            result = i;
        }
    }
    return result;
}

int main() {
    int n, i;
    scanf("%d", &n);
    int arr[n];

    for (i = 0; i < n; i++)
        scanf("%d", &arr[i]);

    printf("%d\n", migratoryBirds(arr, n));

    return 0;
}




5) Sales by Match

#include <stdio.h>

int sockMerchant(int n, int ar[]) {
    int count = 0, freq[101] = {0}; 
    for (int i = 0; i < n; i++) 
        freq[ar[i]]++;
    for (int i = 0; i < 101; i++) 
        count += freq[i] / 2;
    return count;
}

int main() {
    int n;
    scanf("%d", &n);
    int ar[n];
    for (int i = 0; i < n; i++) 
        scanf("%d", &ar[i]);
    printf("%d\n", sockMerchant(n, ar));
    return 0;
}



